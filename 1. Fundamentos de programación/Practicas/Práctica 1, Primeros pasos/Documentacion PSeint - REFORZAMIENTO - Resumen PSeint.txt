Estatus [Casi terminado]

Contestar las preguntas de forma que tu abosorbas más conocimiento,
ya sea así directamente en este txt, o pasarlas a resumen en un word, o hacer tu propia presentación en
power point, en este mismo directorio.

¿Qué es un algoritmo?
	An algorithm is a list of instructions used for solving a problem or for performing a computation. [Ok]

Qué es un pseudcódigo?
	Pseudocode is an artificial and informal language that helps programmers develop algorithms. [Ok]

¿Qué es PSeint?
	Is a program that helps starter people to the programming base, escribiendo pseudocódigo. [Ok]

Explica los tipos de datos que se pueden utilizar en PSeint
	1. Numérico: números, tanto enteros como decimales. Para separar decimales se utiliza el punto. Ejemplos: 12 23 0 -2.3 3.14
	2. Lógico: solo puede tomar dos valores: VERDADERO o FALSO.
	3. Caracter: caracteres o cadenas de caracteres encerrados entre comillas
	(pueden ser dobles o simples). Ejemplos 'hola' "hola mundo" '123' 'FALSO' 'etc' [Ok]

¿Cuántos tipos de operadores hay y cuáles son en PSeint?
	Operador Significado Ejemplo
	Relacionales
	> Mayor que 3>2
	< Menor que 'ABC'<'abc'
	= Igual que 4=3
	<= Menor o igual que 'a'<='b'
	>= Mayor o igual que 4>=5
	<> Distinto que Var1<>var2
	Lógicos
	& ó Y Conjunción (y). (7>4) & (2=1) //falso
	| ó O Disyunción (o). (1=1 | 2=1) //verdadero
	~ ó NO Negación (no). ~(2<5) //falso
	Algebraicos
	+ Suma total <- cant1 + cant2
	- Resta stock <- disp – venta
	* Multiplicación area <- base * altura
	/ División porc <- 100 * parte / total
	^ Potenciación sup <- 3.41 * radio ^ 2
	% ó MOD Módulo (resto de la
	división entera)
	resto <- num MOD div [ESTE FUE COPY/PASTE, Ok]

¿Qué es una estructura de control?
	Control structures allows to modify the flow of execution in the instructions of a program. [Ok]

¿Cuáles son las estructuras de control en PSeint?
	• Condicionales
		o Si-Entonces
		o Selección Múltiple
	• Repetitivas
		o Mientras
		o Repetir
		o Para [ESTE FUE COPY/PASTE, Ok]

¿Qué es un Array/Arreglo y cuáles son sus características?
	Arrays are *static* homogeneous data structures (all their data are of the same type) that allow to store a the same type) that allow to store a certain number of data under the same identifier, and then refer to it using one or more subscripts.
	subscripts. Arrays can be thought of as vectors, arrays, etc. [Ok, very well] Thanks :3


¿Cuál es la estructura que hay que escribir para definir un arreglo *en PSeint*?
	La instrucción Tamanio permite definir un arreglo, indicando sus dimensiones.
	Proceso Prueba
      Definir num como entero;
      TAMANIO=5;
      Dimension num[TAMANIO];
      num[1]=5;
      num[2]=10;
      num[3]=15;
      num[4]=20;
      num[5]=25;
      Para i<-1 Hasta TAMANIO Con Paso 1 Hacer
          Escribir "Escribe un valor para el indice ",i;
          leer num[i];
      Fin Para
      Para i<-1 Hasta TAMANIO Con Paso 1 Hacer
          escribir num[i];
      Fin Para
	FinProceso [Already :3] [Ok]


¿Cómo se accede a un elemento del arreglo?
	// Lectura de su valor.
	char x = arrayCaracteres[2]; [Ok, aunque era en PSeint]


Para la última diapositiva (problema 1 y 2) no es necesario hacerlo en PSeint. Solo escribe aquí el algoritmo
para resolver el problema 1 y 2. Por ejemplo (p.e), para leer un número y mostrarlo el 
algorimo sería el siguiente:
	1. El programa crea variable para guardar el número
	2. El usuario ingresa un número y lo guarda en la variable.
	3. El programa muestra al usuario el número que ha ingresado.

	//Hola mundo
	1. El programa escribe "Hola mundo desde el pseudocódigo de PSeInt"
	2. Termnina programa

	//CompararNumeros
	1. El programa muestra la carátula.
	2. El usuario ingresa 2 datos de tipo int.
	3. El programa compara 2 datos int ingresados por el usuario.
	4. El programa muestra Fin del programa.
	5. Fin del programa.

    [Casi... escribir paso a paso
    	1. El programa muestra la carátula.
    	2. El programa solicita un numero
			3. El usuario ingresa un numero entero.
			4. El programa pide otro numero.
			5. El usuario ingresa otro numero
			4. El programa compara los 2 numero ingresados por el usuario.
			5. El programa muestra cual de los 2 numero es mayor/menor/igual.
			5. El programa muestra Fin del programa.
			6. Fin del programa.
    ]